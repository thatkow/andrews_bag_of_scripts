#!/bin/bash
# ABOUT: Creates a html bootstrap incorporating twitter and d3js libraries
# KEYWORDS: d3js bootstrap twitter
display_usage() {
	echo -e "Usage: `basename $0` [bootstrap_directory]"
}

# if less than two arguments supplied, display usage
if [  $# -gt 1 ]; then
	display_usage
	exit 1
fi


cat << EndOfMessage
<!DOCTYPE html>
<html>
<head>
  <title>Bootstrap 101 Template</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Bootstrap -->
  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

  <!-- Optional theme -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">

  <!-- Latest compiled and minified JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>

  <!-- D3js -->
  <script src="//d3js.org/d3.v3.min.js"></script>
</head>
<body>
  <div class="jumbotron">
    <h1>Hello, Bootstrap with d3js!</h1>
    <p><a class="btn btn-primary btn-lg" href="http://getbootstrap.com/getting-started/" role="button">Learn more</a></p>

    <script>
    var width = 960,
        height = 500;
    var nodes = d3.range(200).map(function() { return {radius: Math.random() * 12 + 4}; }),
        root = nodes[0],
        color = d3.scale.category10();
    root.radius = 0;
    root.fixed = true;
    var force = d3.layout.force()
        .gravity(0.05)
        .charge(function(d, i) { return i ? 0 : -2000; })
        .nodes(nodes)
        .size([width, height]);
    force.start();
    var svg = d3.select("body").append("svg")
        .attr("width", width)
        .attr("height", height);
    svg.selectAll("circle")
        .data(nodes.slice(1))
      .enter().append("circle")
        .attr("r", function(d) { return d.radius; })
        .style("fill", function(d, i) { return color(i % 100); });
    force.on("tick", function(e) {
      var q = d3.geom.quadtree(nodes),
          i = 0,
          n = nodes.length;
      while (++i < n) q.visit(collide(nodes[i]));
      svg.selectAll("circle")
          .attr("cx", function(d) { return d.x; })
          .attr("cy", function(d) { return d.y; });
    });
    svg.on("mousemove", function() {
      var p1 = d3.mouse(this);
      root.px = p1[0];
      root.py = p1[1];
      force.resume();
    });
    function collide(node) {
      var r = node.radius + 16,
          nx1 = node.x - r,
          nx2 = node.x + r,
          ny1 = node.y - r,
          ny2 = node.y + r;
      return function(quad, x1, y1, x2, y2) {
        if (quad.point && (quad.point !== node)) {
          var x = node.x - quad.point.x,
              y = node.y - quad.point.y,
              l = Math.sqrt(x * x + y * y),
              r = node.radius + quad.point.radius;
          if (l < r) {
            l = (l - r) / l * .5;
            node.x -= x *= l;
            node.y -= y *= l;
            quad.point.x += x;
            quad.point.y += y;
          }
        }
        return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
      };
    }
    </script>

  </div>
</body>
</html>
EndOfMessage
